{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCzbbZvotHbMPtJz524-Ej87Uq9cY9gWPE\",\n  authDomain: \"crwn-clothing-db-40284.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-40284\",\n  storageBucket: \"crwn-clothing-db-40284.appspot.com\",\n  messagingSenderId: \"3743530477\",\n  appId: \"1:3743530477:web:1cda6567ab1d031743fbe4\"\n}; // Initialize Firebase\n\ninitializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, \"categories\");\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback); //","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["C:/Users/jvlig/Documents/Web Development/SMALL-PROJECTS/REACT-ECOMMERCE/frontend/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  collection,\r\n  writeBatch,\r\n  query,\r\n  getDocs,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCzbbZvotHbMPtJz524-Ej87Uq9cY9gWPE\",\r\n  authDomain: \"crwn-clothing-db-40284.firebaseapp.com\",\r\n  projectId: \"crwn-clothing-db-40284\",\r\n  storageBucket: \"crwn-clothing-db-40284.appspot.com\",\r\n  messagingSenderId: \"3743530477\",\r\n  appId: \"1:3743530477:web:1cda6567ab1d031743fbe4\",\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n  const collectionRef = collection(db, collectionKey);\r\n  const batch = writeBatch(db);\r\n\r\n  objectsToAdd.forEach((object) => {\r\n    const docRef = doc(collectionRef, object.title.toLowerCase());\r\n    batch.set(docRef, object);\r\n  });\r\n  await batch.commit();\r\n  console.log(\"done\");\r\n};\r\n\r\nexport const getCategoriesAndDocuments = async () => {\r\n  const collectionRef = collection(db, \"categories\");\r\n  const q = query(collectionRef);\r\n  const querySnapshot = await getDocs(q);\r\n\r\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\r\n    const { title, items } = docSnapshot.data();\r\n    acc[title.toLowerCase()] = items;\r\n    return acc;\r\n  }, {});\r\n  return categoryMap;\r\n};\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating the user\", error.message);\r\n    }\r\n  }\r\n\r\n  return userDocRef;\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback); //\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}